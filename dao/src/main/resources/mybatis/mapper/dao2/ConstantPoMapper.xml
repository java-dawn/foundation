<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.foundation.dao2.mapper.ConstantPoMapper">
    <resultMap id="BaseResultMap" type="com.study.foundation.dao2.model.ConstantPo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="constant_type" jdbcType="VARCHAR" property="constantType"/>
        <result column="constant_value" jdbcType="VARCHAR" property="constantValue"/>
        <result column="constant_name" jdbcType="VARCHAR" property="constantName"/>
        <result column="org_code" jdbcType="VARCHAR" property="orgCode"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, constant_type, constant_value, constant_name, org_code
  </sql>
    <select id="selectByExample" parameterType="com.study.foundation.dao2.model.ConstantPoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from delv_constant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from delv_constant
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from delv_constant
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.study.foundation.dao2.model.ConstantPoExample">
        delete from delv_constant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.study.foundation.dao2.model.ConstantPo"
            useGeneratedKeys="true">
    insert into delv_constant (constant_type, constant_value, constant_name,
      org_code)
    values (#{constantType,jdbcType=VARCHAR}, #{constantValue,jdbcType=VARCHAR}, #{constantName,jdbcType=VARCHAR},
      #{orgCode,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.study.foundation.dao2.model.ConstantPo"
            useGeneratedKeys="true">
        insert into delv_constant
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="constantType != null">
                constant_type,
            </if>
            <if test="constantValue != null">
                constant_value,
            </if>
            <if test="constantName != null">
                constant_name,
            </if>
            <if test="orgCode != null">
                org_code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="constantType != null">
                #{constantType,jdbcType=VARCHAR},
            </if>
            <if test="constantValue != null">
                #{constantValue,jdbcType=VARCHAR},
            </if>
            <if test="constantName != null">
                #{constantName,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                #{orgCode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.study.foundation.dao2.model.ConstantPoExample"
            resultType="java.lang.Long">
        select count(*) from delv_constant
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update delv_constant
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.constantType != null">
                constant_type = #{record.constantType,jdbcType=VARCHAR},
            </if>
            <if test="record.constantValue != null">
                constant_value = #{record.constantValue,jdbcType=VARCHAR},
            </if>
            <if test="record.constantName != null">
                constant_name = #{record.constantName,jdbcType=VARCHAR},
            </if>
            <if test="record.orgCode != null">
                org_code = #{record.orgCode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update delv_constant
        set id = #{record.id,jdbcType=BIGINT},
        constant_type = #{record.constantType,jdbcType=VARCHAR},
        constant_value = #{record.constantValue,jdbcType=VARCHAR},
        constant_name = #{record.constantName,jdbcType=VARCHAR},
        org_code = #{record.orgCode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.study.foundation.dao2.model.ConstantPo">
        update delv_constant
        <set>
            <if test="constantType != null">
                constant_type = #{constantType,jdbcType=VARCHAR},
            </if>
            <if test="constantValue != null">
                constant_value = #{constantValue,jdbcType=VARCHAR},
            </if>
            <if test="constantName != null">
                constant_name = #{constantName,jdbcType=VARCHAR},
            </if>
            <if test="orgCode != null">
                org_code = #{orgCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.study.foundation.dao2.model.ConstantPo">
    update delv_constant
    set constant_type = #{constantType,jdbcType=VARCHAR},
      constant_value = #{constantValue,jdbcType=VARCHAR},
      constant_name = #{constantName,jdbcType=VARCHAR},
      org_code = #{orgCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <!--、、、、、、、、、、、、、自定义SQL、、、、、、、、、、、、、、、-->
    <!-- 保存去重 重复更新 -->
    <insert id="saveConstantSet" parameterType="java.util.List">
        insert into delv_constant (constant_type, constant_value,
        constant_name,org_code,constant_unique_key)
        values
        <foreach collection="list" item="item" index="index" separator=",">
             (#{item.constantType,jdbcType=VARCHAR}, #{item.constantValue,jdbcType=VARCHAR},
            #{item.constantName,jdbcType=VARCHAR},#{item.orgCode,jdbcType=VARCHAR},#{item.constantUniqueKey,jdbcType=VARCHAR})
        </foreach>
        on duplicate key update
        constant_unique_key = VALUES (constant_unique_key)
    </insert>

    <!--保存或取消保存处理-->
    <insert id="saveConstantInfo" parameterType="com.study.foundation.dao2.model.ConstantPo">
    INSERT INTO delv_constant(constant_type,constant_value,constant_name,org_code,constant_unique_key)
    SELECT #{constantType},#{constantValue} , #{constantName},#{orgCode},#{constantUniqueKey}
    where NOT EXISTS (SELECT id FROM delv_constant WHERE constant_unique_key = #{constantUniqueKey})
  </insert>

</mapper>